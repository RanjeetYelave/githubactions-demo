name: Build and Release WAR

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.4.2
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: clickonova
          MYSQL_USER: root
          MYSQL_PASSWORD: password
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Wait for MySQL to be ready
        run: |
            until mysqladmin ping -h 127.0.0.1 --silent; do
              echo 'Waiting for MySQL...'
              sleep 5
            done
            echo 'MySQL is up and running!'

      - name: Build with Maven
        run: mvn clean verify
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/clickonova
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: password
          SPRING_APP_JWTSECRET: UHVUYKk67t6t8SBF76bf7f0afdFUDHHFVHVHdfsd867868DBFfsdfFVUHBHD
          SPRING_APP_JWTEXPIRATIONMS: 86400000


      - name: Upload WAR file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: war-artifact
          path: target/GithubActions-1.1-BETA.war


  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: war-artifact

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v1.0.0-${{ github.run_number }}"
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload WAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./GithubActions-1.1-BETA.war
          asset_name: GithubActions-1.1-BETA.war
          asset_content_type: application/java-archive